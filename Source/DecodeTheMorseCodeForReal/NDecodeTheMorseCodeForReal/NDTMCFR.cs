using System;
using DecodeTheMorseCodeForReal;
using NUnit.Framework;
using Shouldly;

namespace NDecodeTheMorseCodeForReal
{
    [TestFixture]
    public class NDTMCFR
    {
        private readonly DTMCFR _testObj = new DTMCFR();

        private void ExecTest(string bits, string expected)
        {
            _testObj.decodeMorse(_testObj.decodeBitsAdvanced(bits)).ShouldBe(expected, "bits: " + bits);
        }

        [Test]
        public void BasicKataTest()
        {
            ExecTest(
                "0000000011011010011100000110000001111110100111110011111100000000000111011111111011111011111000000101100011111100000111110011101100000100000",
                "HEY JUDE");
        }

        [Test]
        public void SingleWord()
        {
            ExecTest(
                "000000001101101001110000011000000111111010011111001111110000000000",
                "HEY");
        }

        [Test]
        public void SingleWord2()
        {
            ExecTest(
                "00000000000111011111111011111011111000000101100011111100000111110011101100000100000",
                "JUDE");
        }

        [Test]
        public void DashesOnly()
        {
            ExecTest(
                "000000001111011110111100011110111101111000111101111011110000000000",
                "OOO");
        }

        [Test]
        public void DashesOnlyShorter()
        {
            ExecTest(
                "000000001111011110001111011110001111011110000000000",
                "MMM");
        }

        [Test]
        public void DotsOnly()
        {
            ExecTest(
                //"000000001101101101100011011011011000110110110110000000000000"))  //ten przyklad nie pasuje do podzialu 1-3-7, przerwa pomiedzy znakami jest za krotka
                "000000001100110011001100000011001100110011000000110011001100110000000000000",
                "HHH");
        }

        [Test]
        public void ESpaceETest()
        {
            ExecTest(
                "10000001",
                "E E");
        }

        [Test]
        public void EmptyString()
        {
            ExecTest(
                "",
                "");
        }

        [Test]
        public void OnlyZeroes()
        {
            ExecTest(
                "00000000000000000000",
                "");
        }

        [Test]
        public void KataShortMessages()
        {
            ExecTest(
                "0",
                "");
            ExecTest(
                "000000000000000000000000000000000000000000",
                "");
            ExecTest(
                "1",
                "E");
            ExecTest(
                "101",
                "I");
            ExecTest(
                "1001",
                "EE");
            ExecTest(
                "10001",
                "EE");
            ExecTest(
                "100001",
                "EE");
            ExecTest(
                "10000001",
                "E E");
            ExecTest(
                "100000001",
                "E E");
            ExecTest(
                "1000000001",
                "E E");
            ExecTest(
                "10000000001",
                "E E");
            ExecTest(
                "10111",
                "A");
            ExecTest(
                "1110111",
                "M");
            ExecTest(
                "111000111",
                "I");
        }

        [Test]
        public void KataLongMessage()
        {
            ExecTest(
                "1100110011001100000011000000111111001100111111001111110000000000000011001111110011111100111111000000110011001111110000001111110011001100000011",
                "HEY JUDE");
            ExecTest(

                "THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG");
            ExecTest(

                "");
        }

        [Test]
        public void KataMultipleBitsPerDot()
        {
            ExecTest(
                "111",
                "E");
            ExecTest(
                "1111111",
                "E");
            ExecTest(
                "110011",
                "I");
            ExecTest(
                "111110000011111",
                "I");
            ExecTest(
                "11111100111111",
                "M");
        }

        [Test]
        public void KataExtraZeros()
        {
            ExecTest(
                "01110",
                "E");
            ExecTest(
                "000000011100000",
                "E");            
        }

        [Test]
        public void KataFinalTest()
        {
            ExecTest(

                "E");
            //11111111 0000000 111111111111 00000000000 111111111 00000 111111111 0 1 00000000 111111111111 0 11 0000 11111111 0 11111111111 0000000000000000000
            //8        7       12           11          9         5     9         1 1 8        12           1 2  4    8        1 11          19
            //-- --. -.-- MGY (8-cluster 1)
            //.- --.-..- A? (8-cluster 0)
            //.- --. -..- AGX (8- 1-0, 0-1)
            //-- --.-.-- M?  (8- 1-1, 0-0)
            //- - --. -.-- TTGY (7-cluster 1)
        }

        [Test]
        public void SingleSpecialTest()
        {
            //ExecTest(

            //    "");
            ExecTest(
                "11111000001111111000011111100000111111111111111000011111111111111000000111111111111111100001110000011111100000001111000000000000000011111111111111",
                "");
        }
    }
}